{"version":3,"file":"firebase-firestore-lite.js","sources":["../util/src/crypt.ts","../util/src/defaults.ts","../util/src/global.ts","../util/src/errors.ts","../util/src/obj.ts","../util/src/compat.ts","../logger/src/logger.ts","../firestore/dist/lite/index.browser.esm2017.js","../util/src/emulator.ts","../component/src/component.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class DecodeBase64StringError extends Error {\n  readonly name = 'DecodeBase64StringError';\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","import { _getProvider, getApp as t, _removeServiceInstance as e, _registerComponent as n, registerVersion as r, SDK_VERSION as s } from \"@firebase/app\";\n\nimport { Component as i } from \"@firebase/component\";\n\nimport { Logger as o, LogLevel as u } from \"@firebase/logger\";\n\nimport { FirebaseError as c, getDefaultEmulatorHostnameAndPort as a, createMockUserToken as h, getModularInstance as l, deepEqual as f } from \"@firebase/util\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass d {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ d.UNAUTHENTICATED = new d(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), \nd.MOCK_USER = new d(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet w = \"9.18.0\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst m = new o(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function p(t) {\n    m.setLogLevel(t);\n}\n\nfunction y(t, ...e) {\n    if (m.logLevel <= u.DEBUG) {\n        const n = e.map(v);\n        m.debug(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\nfunction g(t, ...e) {\n    if (m.logLevel <= u.ERROR) {\n        const n = e.map(v);\n        m.error(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function _(t, ...e) {\n    if (m.logLevel <= u.WARN) {\n        const n = e.map(v);\n        m.warn(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function v(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function b(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${w}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw g(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function E(t, e) {\n    t || b();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function A(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const I = \"ok\", T = \"cancelled\", R = \"unknown\", P = \"invalid-argument\", V = \"deadline-exceeded\", $ = \"not-found\", D = \"already-exists\", N = \"permission-denied\", F = \"unauthenticated\", x = \"resource-exhausted\", S = \"failed-precondition\", q = \"aborted\", O = \"out-of-range\", k = \"unimplemented\", C = \"internal\", L = \"unavailable\", M = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class U extends c {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class j {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class B {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class z {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(d.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class Q {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class W {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (E(\"string\" == typeof t.accessToken), \n        new B(t.accessToken, new d(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class G {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, \n        this.h = new Map;\n    }\n    /** Gets an authorization token, using a provided factory function, or falling back to First Party GAPI. */    l() {\n        return this.u ? this.u() : (\n        // Make sure this really is a Gapi client.\n        E(!(\"object\" != typeof this.t || null === this.t || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), \n        this.t.auth.getAuthHeaderValueForFirstParty([]));\n    }\n    get headers() {\n        this.h.set(\"X-Goog-AuthUser\", this.i);\n        // Use array notation to prevent minification\n        const t = this.l();\n        return t && this.h.set(\"Authorization\", t), this.o && this.h.set(\"X-Goog-Iam-Authorization-Token\", this.o), \n        this.h;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class K {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r;\n    }\n    getToken() {\n        return Promise.resolve(new G(this.t, this.i, this.o, this.u));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(d.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass Y {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class H {\n    constructor(t) {\n        this.m = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (E(\"string\" == typeof t.token), \n        new Y(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass Z {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass J {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new J(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof J && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass X {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === X.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof X ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class tt extends X {\n    construct(t, e, n) {\n        return new tt(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new U(P, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new tt(e);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\nconst et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class nt extends X {\n    construct(t, e, n) {\n        return new nt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return et.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new nt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new U(P, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(P, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n        return new nt(e);\n    }\n    static emptyPath() {\n        return new nt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class rt {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new rt(tt.fromString(t));\n    }\n    static fromName(t) {\n        return new rt(tt.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new rt(tt.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === tt.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return tt.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new rt(new tt(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function st(t, e, n) {\n    if (!n) throw new U(P, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction it(t) {\n    if (!rt.isDocumentKey(t)) throw new U(P, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function ot(t) {\n    if (rt.isDocumentKey(t)) throw new U(P, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction ut(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : b();\n}\n\nfunction ct(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = ut(t);\n            throw new U(P, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction at(t, e) {\n    if (e <= 0) throw new U(P, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The value returned from the most recent invocation of\n * `generateUniqueDebugId()`, or null if it has never been invoked.\n */ let ht = null;\n\n/**\n * Generates and returns an initial value for `lastUniqueDebugId`.\n *\n * The returned value is randomly selected from a range of integers that are\n * represented as 8 hexadecimal digits. This means that (within reason) any\n * numbers generated by incrementing the returned number by 1 will also be\n * represented by 8 hexadecimal digits. This leads to all \"IDs\" having the same\n * length when converted to a hexadecimal string, making reading logs containing\n * these IDs easier to follow. And since the return value is randomly selected\n * it will help to differentiate between logs from different executions.\n */\n/**\n * Generates and returns a unique ID as a hexadecimal string.\n *\n * The returned ID is intended to be used in debug logging messages to help\n * correlate log messages that may be spatially separated in the logs, but\n * logically related. For example, a network connection could include the same\n * \"debug ID\" string in all of its log messages to help trace a specific\n * connection over time.\n *\n * @return the 10-character generated ID (e.g. \"0xa1b2c3d4\").\n */\nfunction lt() {\n    return null === ht ? ht = 268435456 + Math.round(2147483648 * Math.random()) : ht++, \n    \"0x\" + ht.toString(16);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function ft(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function dt(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst wt = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\",\n    RunAggregationQuery: \"runAggregationQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar mt, pt;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction yt(t) {\n    if (void 0 === t) return g(\"RPC_ERROR\", \"HTTP error has no status\"), R;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return I;\n\n      case 400:\n        // Bad Request\n        return S;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return F;\n\n      case 403:\n        // Forbidden\n        return N;\n\n      case 404:\n        // Not Found\n        return $;\n\n      case 409:\n        // Conflict\n        return q;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return O;\n\n      case 429:\n        // Too Many Requests\n        return x;\n\n      case 499:\n        // Client Closed Request\n        return T;\n\n      case 500:\n        // Internal Server Error\n        return R;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return k;\n\n      case 503:\n        // Service Unavailable\n        return L;\n\n      case 504:\n        // Gateway Timeout\n        return V;\n\n      default:\n        return t >= 200 && t < 300 ? I : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : R;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (pt = mt || (mt = {}))[pt.OK = 0] = \"OK\", pt[pt.CANCELLED = 1] = \"CANCELLED\", \npt[pt.UNKNOWN = 2] = \"UNKNOWN\", pt[pt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \npt[pt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", pt[pt.NOT_FOUND = 5] = \"NOT_FOUND\", \npt[pt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", pt[pt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \npt[pt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", pt[pt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \npt[pt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", pt[pt.ABORTED = 10] = \"ABORTED\", \npt[pt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", pt[pt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \npt[pt.INTERNAL = 13] = \"INTERNAL\", pt[pt.UNAVAILABLE = 14] = \"UNAVAILABLE\", pt[pt.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass gt extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.p = e + \"://\" + t.host, this.g = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    get v() {\n        // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n        // where to run the query, and expect the `request` to NOT specify the \"path\".\n        return !1;\n    }\n    A(t, e, n, r, s) {\n        const i = lt(), o = this.I(t, e);\n        y(\"RestConnection\", `Sending RPC '${t}' ${i}:`, o, n);\n        const u = {};\n        return this.T(u, r, s), this.R(t, o, u, n).then((e => (y(\"RestConnection\", `Received RPC '${t}' ${i}: `, e), \n        e)), (e => {\n            throw _(\"RestConnection\", `RPC '${t}' ${i} failed with error: `, e, \"url: \", o, \"request:\", n), \n            e;\n        }));\n    }\n    P(t, e, n, r, s, i) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.A(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    T(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    I(t, e) {\n        const n = wt[t];\n        return `${this.p}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.V = e;\n    }\n    $(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async R(t, e, n, r) {\n        var s;\n        const i = JSON.stringify(r);\n        let o;\n        try {\n            o = await this.V(e, {\n                method: \"POST\",\n                headers: n,\n                body: i\n            });\n        } catch (t) {\n            const e = t;\n            throw new U(yt(e.status), \"Request failed with error: \" + e.statusText);\n        }\n        if (!o.ok) {\n            let t = await o.json();\n            Array.isArray(t) && (t = t[0]);\n            const e = null === (s = null == t ? void 0 : t.error) || void 0 === s ? void 0 : s.message;\n            throw new U(yt(o.status), `Request failed with error: ${null != e ? e : o.statusText}`);\n        }\n        return o.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst _t = /^[_a-zA-Z][_a-zA-Z0-9]*(?:\\.[_a-zA-Z][_a-zA-Z0-9]*)*$/;\n\n/**\n * An alias for aggregation results.\n * @internal\n */ class vt {\n    /**\n     * @internal\n     * @param alias Un-escaped alias representation\n     */\n    constructor(t) {\n        this.alias = t;\n    }\n    /**\n     * Returns true if the string could be used as an alias.\n     */    static D(t) {\n        return _t.test(t);\n    }\n    /**\n     * Return an escaped and quoted string representation of the alias.\n     */    canonicalString() {\n        let t = this.alias.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\");\n        return vt.D(t) || (t = \"`\" + t + \"`\"), t;\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Concrete implementation of the Aggregate type.\n */ class bt {\n    constructor(t, e, n) {\n        this.alias = t, this.N = e, this.fieldPath = n;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */ function Et(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class At {\n    static F() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = Et(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction It(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function Tt(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Rt(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction Pt(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An error encountered while decoding base64 string.\n */\nclass Vt extends Error {\n    constructor() {\n        super(...arguments), this.name = \"Base64DecodeError\";\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass $t {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = function(t) {\n            try {\n                return atob(t);\n            } catch (t) {\n                throw t instanceof DOMException ? new Vt(\"Invalid base64 string: \" + t) : t;\n            }\n        }\n        /** Converts a binary string to a Base64 encoded string. */ (t);\n        return new $t(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new $t(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return It(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\n$t.EMPTY_BYTE_STRING = new $t(\"\");\n\nconst Dt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function Nt(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (E(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = Dt.exec(t);\n        if (E(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: Ft(t.seconds),\n        nanos: Ft(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function Ft(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function xt(t) {\n    return \"string\" == typeof t ? $t.fromBase64String(t) : $t.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass St {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return St.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return St.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new St(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? It(this.nanoseconds, t.nanoseconds) : It(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function qt(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function Ot(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return qt(e) ? Ot(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function kt(t) {\n    const e = Nt(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new St(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ct = {\n    fields: {\n        __type__: {\n            stringValue: \"__max__\"\n        }\n    }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction Lt(t) {\n    return \"nullValue\" in t ? 0 /* TypeOrder.NullValue */ : \"booleanValue\" in t ? 1 /* TypeOrder.BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* TypeOrder.NumberValue */ : \"timestampValue\" in t ? 3 /* TypeOrder.TimestampValue */ : \"stringValue\" in t ? 5 /* TypeOrder.StringValue */ : \"bytesValue\" in t ? 6 /* TypeOrder.BlobValue */ : \"referenceValue\" in t ? 7 /* TypeOrder.RefValue */ : \"geoPointValue\" in t ? 8 /* TypeOrder.GeoPointValue */ : \"arrayValue\" in t ? 9 /* TypeOrder.ArrayValue */ : \"mapValue\" in t ? qt(t) ? 4 /* TypeOrder.ServerTimestampValue */ : \n    /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n    function(t) {\n        return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n    }\n    /**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ (t) ? 9007199254740991 /* TypeOrder.MaxValue */ : 10 /* TypeOrder.ObjectValue */ : b();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function Mt(t, e) {\n    if (t === e) return !0;\n    const n = Lt(t);\n    if (n !== Lt(e)) return !1;\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return !0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return kt(t).isEqual(kt(e));\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = Nt(t.timestampValue), r = Nt(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* TypeOrder.StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            return xt(t.bytesValue).isEqual(xt(e.bytesValue));\n        }(t, e);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            return Ft(t.geoPointValue.latitude) === Ft(e.geoPointValue.latitude) && Ft(t.geoPointValue.longitude) === Ft(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return Ft(t.integerValue) === Ft(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = Ft(t.doubleValue), r = Ft(e.doubleValue);\n                return n === r ? dt(n) === dt(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return Tt(t.arrayValue.values || [], e.arrayValue.values || [], Mt);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (Rt(n) !== Rt(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !Mt(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return b();\n    }\n}\n\nfunction Ut(t, e) {\n    return void 0 !== (t.values || []).find((t => Mt(t, e)));\n}\n\nfunction jt(t, e) {\n    if (t === e) return 0;\n    const n = Lt(t), r = Lt(e);\n    if (n !== r) return It(n, r);\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return 0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return It(t.booleanValue, e.booleanValue);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            const n = Ft(t.integerValue || t.doubleValue), r = Ft(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return Bt(t.timestampValue, e.timestampValue);\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return Bt(kt(t), kt(e));\n\n      case 5 /* TypeOrder.StringValue */ :\n        return It(t.stringValue, e.stringValue);\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            const n = xt(t), r = xt(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = It(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return It(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            const n = It(Ft(t.latitude), Ft(e.latitude));\n            if (0 !== n) return n;\n            return It(Ft(t.longitude), Ft(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = jt(n[t], r[t]);\n                if (e) return e;\n            }\n            return It(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            if (t === Ct && e === Ct) return 0;\n            if (t === Ct) return 1;\n            if (e === Ct) return -1;\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = It(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = jt(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return It(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw b();\n    }\n}\n\nfunction Bt(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return It(t, e);\n    const n = Nt(t), r = Nt(e), s = It(n.seconds, r.seconds);\n    return 0 !== s ? s : It(n.nanos, r.nanos);\n}\n\nfunction zt(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function Qt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Wt(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Gt(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function Kt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Yt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Pt(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Yt(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Yt(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\nclass Ht {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\nfunction Zt(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!Mt(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Jt {}\n\nclass Xt extends Jt {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* Operator.IN */ === e || \"not-in\" /* Operator.NOT_IN */ === e ? this.createKeyFieldInFilter(t, e, n) : new ne(t, e, n) : \"array-contains\" /* Operator.ARRAY_CONTAINS */ === e ? new oe(t, n) : \"in\" /* Operator.IN */ === e ? new ue(t, n) : \"not-in\" /* Operator.NOT_IN */ === e ? new ce(t, n) : \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === e ? new ae(t, n) : new Xt(t, e, n);\n    }\n    static createKeyFieldInFilter(t, e, n) {\n        return \"in\" /* Operator.IN */ === e ? new re(t, n) : new se(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* Operator.NOT_EQUAL */ === this.op ? null !== e && this.matchesComparison(jt(e, this.value)) : null !== e && Lt(this.value) === Lt(e) && this.matchesComparison(jt(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    matchesComparison(t) {\n        switch (this.op) {\n          case \"<\" /* Operator.LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* Operator.EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* Operator.GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return b();\n        }\n    }\n    isInequality() {\n        return [ \"<\" /* Operator.LESS_THAN */ , \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ , \">\" /* Operator.GREATER_THAN */ , \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ , \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n    getFlattenedFilters() {\n        return [ this ];\n    }\n    getFilters() {\n        return [ this ];\n    }\n    getFirstInequalityField() {\n        return this.isInequality() ? this.field : null;\n    }\n}\n\nclass te extends Jt {\n    constructor(t, e) {\n        super(), this.filters = t, this.op = e, this.S = null;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e) {\n        return new te(t, e);\n    }\n    matches(t) {\n        return \"and\" /* CompositeOperator.AND */ === this.op ? void 0 === this.filters.find((e => !e.matches(t))) : void 0 !== this.filters.find((e => e.matches(t)));\n    }\n    getFlattenedFilters() {\n        return null !== this.S || (this.S = this.filters.reduce(((t, e) => t.concat(e.getFlattenedFilters())), [])), \n        this.S;\n    }\n    // Returns a mutable copy of `this.filters`\n    getFilters() {\n        return Object.assign([], this.filters);\n    }\n    getFirstInequalityField() {\n        const t = this.q((t => t.isInequality()));\n        return null !== t ? t.field : null;\n    }\n    // Performs a depth-first search to find and return the first FieldFilter in the composite filter\n    // that satisfies the predicate. Returns `null` if none of the FieldFilters satisfy the\n    // predicate.\n    q(t) {\n        for (const e of this.getFlattenedFilters()) if (t(e)) return e;\n        return null;\n    }\n}\n\nfunction ee(t, e) {\n    return t instanceof Xt ? function(t, e) {\n        return e instanceof Xt && t.op === e.op && t.field.isEqual(e.field) && Mt(t.value, e.value);\n    }(t, e) : t instanceof te ? function(t, e) {\n        if (e instanceof te && t.op === e.op && t.filters.length === e.filters.length) {\n            return t.filters.reduce(((t, n, r) => t && ee(n, e.filters[r])), !0);\n        }\n        return !1;\n    }\n    /** Filter that matches on key fields (i.e. '__name__'). */ (t, e) : void b();\n}\n\nclass ne extends Xt {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = rt.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = rt.comparator(t.key, this.key);\n        return this.matchesComparison(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class re extends Xt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e), this.keys = ie(\"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class se extends Xt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e), this.keys = ie(\"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction ie(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => rt.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class oe extends Xt {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* Operator.ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return Qt(e) && Ut(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class ue extends Xt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && Ut(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class ce extends Xt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        if (Ut(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !Ut(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class ae extends Xt {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!Qt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => Ut(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class he {\n    constructor(t, e = \"asc\" /* Direction.ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction le(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class fe {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new fe(t);\n    }\n    static min() {\n        return new fe(new St(0, 0));\n    }\n    static max() {\n        return new fe(new St(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass de {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || me.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new de(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, me.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new de(this.comparator, this.root.remove(t, this.comparator).copy(null, null, me.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const r = this.comparator(t, n.key);\n            if (0 === r) return e + n.left.size;\n            r < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new we(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new we(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new we(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new we(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass we {\n    constructor(t, e, n, r) {\n        this.isReverse = r, this.nodeStack = [];\n        let s = 1;\n        for (;!t.isEmpty(); ) if (s = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && r && (s *= -1), s < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === s) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass me {\n    constructor(t, e, n, r, s) {\n        this.key = t, this.value = e, this.color = null != n ? n : me.RED, this.left = null != r ? r : me.EMPTY, \n        this.right = null != s ? s : me.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, r, s) {\n        return new me(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let r = this;\n        const s = n(t, r.key);\n        return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), \n        r.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return me.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, r = this;\n        if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), \n        r = r.copy(null, null, null, r.left.remove(t, e), null); else {\n            if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), \n            0 === e(t, r.key)) {\n                if (r.right.isEmpty()) return me.EMPTY;\n                n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n            }\n            r = r.copy(null, null, null, null, r.right.remove(t, e));\n        }\n        return r.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, me.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, me.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw b();\n        if (this.right.isRed()) throw b();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw b();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nme.EMPTY = null, me.RED = !0, me.BLACK = !1;\n\n// end LLRBEmptyNode\nme.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw b();\n    }\n    get value() {\n        throw b();\n    }\n    get color() {\n        throw b();\n    }\n    get left() {\n        throw b();\n    }\n    get right() {\n        throw b();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, r, s) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new me(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass pe {\n    constructor(t) {\n        this.comparator = t, this.data = new de(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const r = n.getNext();\n            if (this.comparator(r.key, t[1]) >= 0) return;\n            e(r.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new ye(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new ye(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof pe)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, r = n.getNext().key;\n            if (0 !== this.comparator(t, r)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new pe(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass ye {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class ge {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(nt.comparator);\n    }\n    static empty() {\n        return new ge([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */    unionWith(t) {\n        let e = new pe(nt.comparator);\n        for (const t of this.fields) e = e.add(t);\n        for (const n of t) e = e.add(n);\n        return new ge(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return Tt(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ class _e {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new _e({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !Kt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Yt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = nt.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Yt(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        Kt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return Mt(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            Kt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        Pt(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new _e(Yt(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class ve {\n    constructor(t, e, n, r, s, i, o) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.createTime = s, \n        this.data = i, this.documentState = o;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new ve(t, 0 /* DocumentType.INVALID */ , \n        /* version */ fe.min(), \n        /* readTime */ fe.min(), \n        /* createTime */ fe.min(), _e.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n, r) {\n        return new ve(t, 1 /* DocumentType.FOUND_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ fe.min(), \n        /* createTime */ n, r, 0 /* DocumentState.SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new ve(t, 2 /* DocumentType.NO_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ fe.min(), \n        /* createTime */ fe.min(), _e.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new ve(t, 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ fe.min(), \n        /* createTime */ fe.min(), _e.empty(), 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        // If a document is switching state from being an invalid or deleted\n        // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n        // update from Watch or due to applying a local set mutation on top\n        // of a deleted document, our best guess about its createTime would be the\n        // version at which the document transitioned to a FOUND_DOCUMENT.\n        return !this.createTime.isEqual(fe.min()) || 2 /* DocumentType.NO_DOCUMENT */ !== this.documentType && 0 /* DocumentType.INVALID */ !== this.documentType || (this.createTime = t), \n        this.version = t, this.documentType = 1 /* DocumentType.FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* DocumentType.NO_DOCUMENT */ , \n        this.data = _e.empty(), this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        this.data = _e.empty(), this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , \n        this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ , this.version = fe.min(), \n        this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* DocumentType.INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* DocumentType.FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* DocumentType.NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* DocumentType.UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof ve && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new ve(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {createTime: ${this.createTime}}), {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass be {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.O = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function Ee(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new be(t, e, n, r, s, i, o);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\nclass Ae {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* LimitType.First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.k = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.C = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function Ie(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction Te(t) {\n    for (const e of t.filters) {\n        const t = e.getFirstInequalityField();\n        if (null !== t) return t;\n    }\n    return null;\n}\n\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction Re(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function Pe(t) {\n    const e = A(t);\n    if (null === e.k) {\n        e.k = [];\n        const t = Te(e), n = Ie(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.k.push(new he(t)), e.k.push(new he(nt.keyField(), \"asc\" /* Direction.ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.k.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* Direction.ASCENDING */;\n                e.k.push(new he(nt.keyField(), t));\n            }\n        }\n    }\n    return e.k;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function Ve(t) {\n    const e = A(t);\n    if (!e.C) if (\"F\" /* LimitType.First */ === e.limitType) e.C = Ee(e.path, e.collectionGroup, Pe(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of Pe(e)) {\n            const e = \"desc\" /* Direction.DESCENDING */ === n.dir ? \"asc\" /* Direction.ASCENDING */ : \"desc\" /* Direction.DESCENDING */;\n            t.push(new he(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new Ht(e.endAt.position, e.endAt.inclusive) : null, r = e.startAt ? new Ht(e.startAt.position, e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.C = Ee(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.C;\n}\n\nfunction $e(t, e) {\n    e.getFirstInequalityField(), Te(t);\n    const n = t.filters.concat([ e ]);\n    return new Ae(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n}\n\nfunction De(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!le(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let n = 0; n < t.filters.length; n++) if (!ee(t.filters[n], e.filters[n])) return !1;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!Zt(t.startAt, e.startAt) && Zt(t.endAt, e.endAt);\n    }(Ve(t), Ve(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction Ne(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !dt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.L) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: dt(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class Fe {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class xe extends Fe {}\n\n/** Transforms an array value via a union operation. */ class Se extends Fe {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class qe extends Fe {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class Oe extends Fe {\n    constructor(t, e) {\n        super(), this.M = t, this.U = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class ke {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class Ce {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new Ce;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new Ce(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new Ce(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class Le {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class Me extends Le {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* MutationType.Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class Ue extends Le {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* MutationType.Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class je extends Le {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* MutationType.Delete */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class Be extends Le {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* MutationType.Verify */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const ze = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Qe = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})(), We = (() => {\n    const t = {\n        and: \"AND\",\n        or: \"OR\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Ge {\n    constructor(t, e) {\n        this.databaseId = t, this.L = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction Ke(t, e) {\n    if (t.L) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Ye(t, e) {\n    return t.L ? e.toBase64() : e.toUint8Array();\n}\n\nfunction He(t, e) {\n    return Ke(t, e.toTimestamp());\n}\n\nfunction Ze(t) {\n    return E(!!t), fe.fromTimestamp(function(t) {\n        const e = Nt(t);\n        return new St(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction Je(t, e) {\n    return function(t) {\n        return new tt([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Xe(t, e) {\n    return Je(t.databaseId, e.path);\n}\n\nfunction tn(t, e) {\n    const n = function(t) {\n        const e = tt.fromString(t);\n        return E(wn(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction en(t, e) {\n    return Je(t.databaseId, e);\n}\n\nfunction nn(t) {\n    return new tt([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction rn(t, e, n) {\n    return {\n        name: Xe(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction sn(t, e) {\n    return \"found\" in e ? function(t, e) {\n        E(!!e.found), e.found.name, e.found.updateTime;\n        const n = tn(t, e.found.name), r = Ze(e.found.updateTime), s = e.found.createTime ? Ze(e.found.createTime) : fe.min(), i = new _e({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return ve.newFoundDocument(n, r, s, i);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        E(!!e.missing), E(!!e.readTime);\n        const n = tn(t, e.missing), r = Ze(e.readTime);\n        return ve.newNoDocument(n, r);\n    }(t, e) : b();\n}\n\nfunction on(t, e) {\n    let n;\n    if (e instanceof Me) n = {\n        update: rn(t, e.key, e.value)\n    }; else if (e instanceof je) n = {\n        delete: Xe(t, e.key)\n    }; else if (e instanceof Ue) n = {\n        update: rn(t, e.key, e.data),\n        updateMask: dn(e.fieldMask)\n    }; else {\n        if (!(e instanceof Be)) return b();\n        n = {\n            verify: Xe(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof xe) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof Se) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof qe) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Oe) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.U\n        };\n        throw b();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: He(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : b();\n    }(t, e.precondition)), n;\n}\n\nfunction un(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = en(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = en(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        return fn(te.create(t, \"and\" /* CompositeOperator.AND */));\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: ln(t.field),\n                direction: cn(t.dir)\n            };\n        }\n        // visible for testing\n        (t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.L || ft(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), n;\n}\n\nfunction cn(t) {\n    return ze[t];\n}\n\n// visible for testing\nfunction an(t) {\n    return Qe[t];\n}\n\nfunction hn(t) {\n    return We[t];\n}\n\nfunction ln(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction fn(t) {\n    return t instanceof Xt ? function(t) {\n        if (\"==\" /* Operator.EQUAL */ === t.op) {\n            if (Gt(t.value)) return {\n                unaryFilter: {\n                    field: ln(t.field),\n                    op: \"IS_NAN\"\n                }\n            };\n            if (Wt(t.value)) return {\n                unaryFilter: {\n                    field: ln(t.field),\n                    op: \"IS_NULL\"\n                }\n            };\n        } else if (\"!=\" /* Operator.NOT_EQUAL */ === t.op) {\n            if (Gt(t.value)) return {\n                unaryFilter: {\n                    field: ln(t.field),\n                    op: \"IS_NOT_NAN\"\n                }\n            };\n            if (Wt(t.value)) return {\n                unaryFilter: {\n                    field: ln(t.field),\n                    op: \"IS_NOT_NULL\"\n                }\n            };\n        }\n        return {\n            fieldFilter: {\n                field: ln(t.field),\n                op: an(t.op),\n                value: t.value\n            }\n        };\n    }(t) : t instanceof te ? function(t) {\n        const e = t.getFilters().map((t => fn(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: hn(t.op),\n                filters: e\n            }\n        };\n    }(t) : b();\n}\n\nfunction dn(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction wn(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function mn(t) {\n    return new Ge(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass pn {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.j = t, this.timerId = e, this.B = n, this.W = r, this.G = s, this.K = 0, this.Y = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.H = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.K = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    Z() {\n        this.K = this.G;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    J(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.K + this.X()), n = Math.max(0, Date.now() - this.H), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && y(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.K} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.Y = this.j.enqueueAfterDelay(this.timerId, r, (() => (this.H = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.K *= this.W, this.K < this.B && (this.K = this.B), this.K > this.G && (this.K = this.G);\n    }\n    tt() {\n        null !== this.Y && (this.Y.skipDelay(), this.Y = null);\n    }\n    cancel() {\n        null !== this.Y && (this.Y.cancel(), this.Y = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    X() {\n        return (Math.random() - .5) * this.K;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass yn extends class {} {\n    constructor(t, e, n, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.connection = n, \n        this.M = r, this.et = !1;\n    }\n    nt() {\n        if (this.et) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    A(t, e, n) {\n        return this.nt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.connection.A(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    P(t, e, n, r) {\n        return this.nt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.connection.P(t, e, n, s, i, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    terminate() {\n        this.et = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function gn(t, e) {\n    const n = A(t), r = nn(n.M) + \"/documents\", s = {\n        writes: e.map((t => on(n.M, t)))\n    };\n    await n.A(\"Commit\", r, s);\n}\n\nasync function _n(t, e) {\n    const n = A(t), r = nn(n.M) + \"/documents\", s = {\n        documents: e.map((t => Xe(n.M, t)))\n    }, i = await n.P(\"BatchGetDocuments\", r, s, e.length), o = new Map;\n    i.forEach((t => {\n        const e = sn(n.M, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        E(!!e), u.push(e);\n    })), u;\n}\n\nasync function vn(t, e) {\n    const n = A(t), r = un(n.M, Ve(e));\n    return (await n.P(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = tn(t, e.name), s = Ze(e.updateTime), i = e.createTime ? Ze(e.createTime) : fe.min(), o = new _e({\n            mapValue: {\n                fields: e.fields\n            }\n        }), u = ve.newFoundDocument(r, s, i, o);\n        return n && u.setHasCommittedMutations(), n ? u.setHasCommittedMutations() : u;\n    }(n.M, t.document, void 0)));\n}\n\nasync function bn(t, e, n) {\n    const r = A(t), s = function(t, e, n) {\n        const r = un(t, e), s = [];\n        return n.forEach((t => {\n            \"count\" === t.N ? s.push({\n                alias: t.alias.canonicalString(),\n                count: {}\n            }) : \"avg\" === t.N ? s.push({\n                alias: t.alias.canonicalString(),\n                avg: {\n                    field: ln(t.fieldPath)\n                }\n            }) : \"sum\" === t.N && s.push({\n                alias: t.alias.canonicalString(),\n                sum: {\n                    field: ln(t.fieldPath)\n                }\n            });\n        })), {\n            structuredAggregationQuery: {\n                aggregations: s,\n                structuredQuery: r.structuredQuery\n            },\n            parent: r.parent\n        };\n    }(r.M, Ve(e), n), i = s.parent;\n    r.connection.v || delete s.parent;\n    const o = (await r.P(\"RunAggregationQuery\", i, s, /*expectedResponseCount=*/ 1)).filter((t => !!t.result));\n    // Omit RunAggregationQueryResponse that only contain readTimes.\n        return E(1 === o.length), (u = o[0]).result, u.result.aggregateFields, new _e({\n        mapValue: {\n            fields: null === (c = u.result) || void 0 === c ? void 0 : c.aggregateFields\n        }\n    });\n    var u, c;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const En = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction An(t) {\n    if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n    if (!En.has(t)) {\n        y(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new gt(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new Z(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = mn(t._databaseId), u = function(t, e, n, r) {\n            return new yn(t, e, n, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        En.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return En.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass In {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new U(P, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */ class Tn {\n    /** @hideconstructor */\n    constructor(t, e, n, r) {\n        this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, \n        this._app = r, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new In({}), \n        this._settingsFrozen = !1;\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new In(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new z;\n            switch (t.type) {\n              case \"gapi\":\n                const e = t.client;\n                return new K(e, t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = En.get(t);\n            e && (y(\"ComponentProvider\", \"Removing Datastore\"), En.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction Rn(t, e, n) {\n    n || (n = \"(default)\");\n    const r = _getProvider(t, \"firestore/lite\");\n    if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n    return r.initialize({\n        options: e,\n        instanceIdentifier: n\n    });\n}\n\nfunction Pn(e, n) {\n    const r = \"object\" == typeof e ? e : t(), s = \"string\" == typeof e ? e : n || \"(default)\", i = _getProvider(r, \"firestore/lite\").getImmediate({\n        identifier: s\n    });\n    if (!i._initialized) {\n        const t = a(\"firestore\");\n        t && Vn(i, ...t);\n    }\n    return i;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function Vn(t, e, n, r = {}) {\n    var s;\n    const i = (t = ct(t, Tn))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== e && _(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = d.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = h(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new d(i);\n        }\n        t._authCredentials = new Q(new B(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function $n(t) {\n    return t = ct(t, Tn), e(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass Dn {\n    /**\n     * Create a new AggregateField<T>\n     * @param _aggregateType Specifies the type of aggregation operation to perform.\n     * @param _internalFieldPath Optionally specifies the field that is aggregated.\n     * @internal\n     */\n    constructor(\n    // TODO (sum/avg) make aggregateType public when the feature is supported\n    t = \"count\", e) {\n        this._aggregateType = t, this._internalFieldPath = e, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateField\";\n    }\n}\n\n/**\n * The results of executing an aggregation query.\n */ class Nn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        this._userDataWriter = e, this._data = n, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateQuerySnapshot\", this.query = t;\n    }\n    /**\n     * Returns the results of the aggregations performed over the underlying\n     * query.\n     *\n     * The keys of the returned object will be the same as those of the\n     * `AggregateSpec` object specified to the aggregation method, and the values\n     * will be the corresponding aggregation result.\n     *\n     * @returns The results of the aggregations performed over the underlying\n     * query.\n     */    data() {\n        return this._userDataWriter.convertValue(this._data.value);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */ class Fn {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new Sn(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new Fn(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class xn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new xn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link (query:1)}).\n */ class Sn extends xn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new Ae(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new Fn(this.firestore, \n        /* converter= */ null, new rt(t));\n    }\n    withConverter(t) {\n        return new Sn(this.firestore, t, this._path);\n    }\n}\n\nfunction qn(t, e, ...n) {\n    if (t = l(t), st(\"collection\", \"path\", e), t instanceof Tn) {\n        const r = tt.fromString(e, ...n);\n        return ot(r), new Sn(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof Fn || t instanceof Sn)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return ot(r), new Sn(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function On(t, e) {\n    if (t = ct(t, Tn), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new xn(t, \n    /* converter= */ null, function(t) {\n        return new Ae(tt.emptyPath(), t);\n    }(e));\n}\n\nfunction kn(t, e, ...n) {\n    if (t = l(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = At.F()), st(\"doc\", \"path\", e), t instanceof Tn) {\n        const r = tt.fromString(e, ...n);\n        return it(r), new Fn(t, \n        /* converter= */ null, new rt(r));\n    }\n    {\n        if (!(t instanceof Fn || t instanceof Sn)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return it(r), new Fn(t.firestore, t instanceof Sn ? t.converter : null, new rt(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Cn(t, e) {\n    return t = l(t), e = l(e), (t instanceof Fn || t instanceof Sn) && (e instanceof Fn || e instanceof Sn) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Ln(t, e) {\n    return t = l(t), e = l(e), t instanceof xn && e instanceof xn && (t.firestore === e.firestore && De(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class Mn {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new Mn($t.fromBase64String(t));\n        } catch (t) {\n            throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new Mn($t.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class Un {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new nt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function jn() {\n    return new Un(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class Bn {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class zn {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return It(this._lat, t._lat) || It(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Qn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class Wn {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new Ue(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Me(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class Gn {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new Ue(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction Kn(t) {\n    switch (t) {\n      case 0 /* UserDataSource.Set */ :\n // fall through\n              case 2 /* UserDataSource.MergeSet */ :\n // fall through\n              case 1 /* UserDataSource.Update */ :\n        return !0;\n\n      case 3 /* UserDataSource.Argument */ :\n      case 4 /* UserDataSource.ArrayArgument */ :\n        return !1;\n\n      default:\n        throw b();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class Yn {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.M = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.rt(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get st() {\n        return this.settings.st;\n    }\n    /** Returns a new context with the specified settings overwritten. */    it(t) {\n        return new Yn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.M, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    ot(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.it({\n            path: n,\n            ut: !1\n        });\n        return r.ct(t), r;\n    }\n    at(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.it({\n            path: n,\n            ut: !1\n        });\n        return r.rt(), r;\n    }\n    ht(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.it({\n            path: void 0,\n            ut: !0\n        });\n    }\n    lt(t) {\n        return mr(t, this.settings.methodName, this.settings.ft || !1, this.path, this.settings.dt);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    rt() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.ct(this.path.get(t));\n    }\n    ct(t) {\n        if (0 === t.length) throw this.lt(\"Document fields must not be empty\");\n        if (Kn(this.st) && Qn.test(t)) throw this.lt('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class Hn {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.M = n || mn(t);\n    }\n    /** Creates a new top-level parse context. */    wt(t, e, n, r = !1) {\n        return new Yn({\n            st: t,\n            methodName: e,\n            dt: n,\n            path: nt.emptyPath(),\n            ut: !1,\n            ft: r\n        }, this.databaseId, this.M, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Zn(t) {\n    const e = t._freezeSettings(), n = mn(t._databaseId);\n    return new Hn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Jn(t, e, n, r, s, i = {}) {\n    const o = t.wt(i.merge || i.mergeFields ? 2 /* UserDataSource.MergeSet */ : 0 /* UserDataSource.Set */ , e, n, s);\n    lr(\"Data must be an object, but it was:\", o, r);\n    const u = ar(r, o);\n    let c, a;\n    if (i.merge) c = new ge(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = fr(e, r, n);\n            if (!o.contains(s)) throw new U(P, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            pr(t, s) || t.push(s);\n        }\n        c = new ge(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new Wn(new _e(u), c, a);\n}\n\nclass Xn extends Bn {\n    _toFieldTransform(t) {\n        if (2 /* UserDataSource.MergeSet */ !== t.st) throw 1 /* UserDataSource.Update */ === t.st ? t.lt(`${this._methodName}() can only appear at the top level of your update data`) : t.lt(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof Xn;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function tr(t, e, n) {\n    return new Yn({\n        st: 3 /* UserDataSource.Argument */ ,\n        dt: e.settings.dt,\n        methodName: t._methodName,\n        ut: n\n    }, e.databaseId, e.M, e.ignoreUndefinedProperties);\n}\n\nclass er extends Bn {\n    _toFieldTransform(t) {\n        return new ke(t.path, new xe);\n    }\n    isEqual(t) {\n        return t instanceof er;\n    }\n}\n\nclass nr extends Bn {\n    constructor(t, e) {\n        super(t), this.yt = e;\n    }\n    _toFieldTransform(t) {\n        const e = tr(this, t, \n        /*array=*/ !0), n = this.yt.map((t => cr(t, e))), r = new Se(n);\n        return new ke(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass rr extends Bn {\n    constructor(t, e) {\n        super(t), this.yt = e;\n    }\n    _toFieldTransform(t) {\n        const e = tr(this, t, \n        /*array=*/ !0), n = this.yt.map((t => cr(t, e))), r = new qe(n);\n        return new ke(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass sr extends Bn {\n    constructor(t, e) {\n        super(t), this.gt = e;\n    }\n    _toFieldTransform(t) {\n        const e = new Oe(t.M, Ne(t.M, this.gt));\n        return new ke(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function ir(t, e, n, r) {\n    const s = t.wt(1 /* UserDataSource.Update */ , e, n);\n    lr(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = _e.empty();\n    Pt(r, ((t, r) => {\n        const u = wr(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = l(r);\n        const c = s.at(u);\n        if (r instanceof Xn) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = cr(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new ge(i);\n    return new Gn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function or(t, e, n, r, s, i) {\n    const o = t.wt(1 /* UserDataSource.Update */ , e, n), u = [ fr(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new U(P, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(fr(e, i[t])), c.push(i[t + 1]);\n    const a = [], h = _e.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!pr(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = l(n);\n        const r = o.at(e);\n        if (n instanceof Xn) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = cr(n, r);\n            null != t && (a.push(e), h.set(e, t));\n        }\n    }\n    const f = new ge(a);\n    return new Gn(h, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function ur(t, e, n, r = !1) {\n    return cr(n, t.wt(r ? 4 /* UserDataSource.ArrayArgument */ : 3 /* UserDataSource.Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function cr(t, e) {\n    if (hr(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = l(t))) return lr(\"Unsupported field value:\", e, t), ar(t, e);\n    if (t instanceof Bn) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Kn(e.st)) throw e.lt(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.lt(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.ut && 4 /* UserDataSource.ArrayArgument */ !== e.st) throw e.lt(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = cr(s, e.ht(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = l(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return Ne(e.M, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = St.fromDate(t);\n            return {\n                timestampValue: Ke(e.M, n)\n            };\n        }\n        if (t instanceof St) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new St(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: Ke(e.M, n)\n            };\n        }\n        if (t instanceof zn) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof Mn) return {\n            bytesValue: Ye(e.M, t._byteString)\n        };\n        if (t instanceof Fn) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.lt(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: Je(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.lt(`Unsupported field value: ${ut(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction ar(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }(t) ? Pt(t, ((t, r) => {\n        const s = cr(r, e.ot(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction hr(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof St || t instanceof zn || t instanceof Mn || t instanceof Fn || t instanceof Bn);\n}\n\nfunction lr(t, e, n) {\n    if (!hr(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = ut(n);\n        throw \"an object\" === r ? e.lt(t + \" a custom object\") : e.lt(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function fr(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = l(e)) instanceof Un) return e._internalPath;\n    if (\"string\" == typeof e) return wr(t, e);\n    throw mr(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const dr = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function wr(t, e, n) {\n    if (e.search(dr) >= 0) throw mr(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new Un(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw mr(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction mr(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new U(P, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function pr(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class yr {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new Fn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new gr(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(br(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class gr extends yr {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class _r {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function vr(t, e) {\n    return t = l(t), e = l(e), t instanceof yr && e instanceof yr ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof _r && e instanceof _r && (Ln(t.query, e.query) && Tt(t.docs, e.docs, vr));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function br(t, e) {\n    return \"string\" == typeof e ? wr(t, e) : e instanceof Un ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\nclass Er {}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * (endBefore:1)}, {@link (endAt:1)}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link (query:1)} to create a new query instance that\n * also contains this `QueryConstraint`.\n */ class Ar extends Er {}\n\nfunction Ir(t, e, ...n) {\n    let r = [];\n    e instanceof Er && r.push(e), r = r.concat(n), function(t) {\n        const e = t.filter((t => t instanceof Pr)).length, n = t.filter((t => t instanceof Tr)).length;\n        if (e > 1 || e > 0 && n > 0) throw new U(P, \"InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.\");\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */ (r);\n    for (const e of r) t = e._apply(t);\n    return t;\n}\n\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link (query:1)} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */ class Tr extends Ar {\n    /**\n     * @internal\n     */\n    constructor(t, e, n) {\n        super(), this._field = t, this._op = e, this._value = n, \n        /** The type of this query constraint */\n        this.type = \"where\";\n    }\n    static _create(t, e, n) {\n        return new Tr(t, e, n);\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return zr(t._query, e), new xn(t.firestore, t.converter, $e(t._query, e));\n    }\n    _parse(t) {\n        const e = Zn(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* Operator.ARRAY_CONTAINS */ === i || \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === i) throw new U(P, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i) {\n                    Br(o, i);\n                    const e = [];\n                    for (const n of o) e.push(jr(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = jr(r, t, o);\n            } else \"in\" /* Operator.IN */ !== i && \"not-in\" /* Operator.NOT_IN */ !== i && \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ !== i || Br(o, i), \n            u = ur(n, e, o, \n            /* allowArrays= */ \"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i);\n            return Xt.create(s, i, u);\n        }(t._query, \"where\", e, t.firestore._databaseId, this._field, this._op, this._value);\n        return n;\n    }\n}\n\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */ function Rr(t, e, n) {\n    const r = e, s = br(\"where\", t);\n    return Tr._create(s, r, n);\n}\n\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link (query:1)} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n */ class Pr extends Er {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e) {\n        super(), this.type = t, this._queryConstraints = e;\n    }\n    static _create(t, e) {\n        return new Pr(t, e);\n    }\n    _parse(t) {\n        const e = this._queryConstraints.map((e => e._parse(t))).filter((t => t.getFilters().length > 0));\n        return 1 === e.length ? e[0] : te.create(e, this._getOperator());\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return 0 === e.getFilters().length ? t : (function(t, e) {\n            let n = t;\n            const r = e.getFlattenedFilters();\n            for (const t of r) zr(n, t), n = $e(n, t);\n        }\n        // Checks if any of the provided filter operators are included in the given list of filters and\n        // returns the first one that is, or null if none are.\n        (t._query, e), new xn(t.firestore, t.converter, $e(t._query, e)));\n    }\n    _getQueryConstraints() {\n        return this._queryConstraints;\n    }\n    _getOperator() {\n        return \"and\" === this.type ? \"and\" /* CompositeOperator.AND */ : \"or\" /* CompositeOperator.OR */;\n    }\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a disjunction of\n * the given filter constraints. A disjunction filter includes a document if it\n * satisfies any of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a disjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n */ function Vr(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => Wr(\"or\", t))), Pr._create(\"or\" /* CompositeOperator.OR */ , t);\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a conjunction of\n * the given filter constraints. A conjunction filter includes a document if it\n * satisfies all of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a conjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n */ function $r(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => Wr(\"and\", t))), Pr._create(\"and\" /* CompositeOperator.AND */ , t);\n}\n\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link (query:1)} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */ class Dr extends Ar {\n    /**\n     * @internal\n     */\n    constructor(t, e) {\n        super(), this._field = t, this._direction = e, \n        /** The type of this query constraint */\n        this.type = \"orderBy\";\n    }\n    static _create(t, e) {\n        return new Dr(t, e);\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new he(e, n);\n            return function(t, e) {\n                if (null === Ie(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = Te(t);\n                    null !== n && Qr(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this._field, this._direction);\n        return new xn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new Ae(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */ function Nr(t, e = \"asc\") {\n    const n = e, r = br(\"orderBy\", t);\n    return Dr._create(r, n);\n}\n\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link (query:1)} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */ class Fr extends Ar {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._limit = e, this._limitType = n;\n    }\n    static _create(t, e, n) {\n        return new Fr(t, e, n);\n    }\n    _apply(t) {\n        return new xn(t.firestore, t.converter, function(t, e, n) {\n            return new Ae(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this._limit, this._limitType));\n    }\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function xr(t) {\n    return at(\"limit\", t), Fr._create(\"limit\", t, \"F\" /* LimitType.First */);\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function Sr(t) {\n    return at(\"limitToLast\", t), Fr._create(\"limitToLast\", t, \"L\" /* LimitType.Last */);\n}\n\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link (query:1)} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */ class qr extends Ar {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new qr(t, e, n);\n    }\n    _apply(t) {\n        const e = Ur(t, this.type, this._docOrFields, this._inclusive);\n        return new xn(t.firestore, t.converter, function(t, e) {\n            return new Ae(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction Or(...t) {\n    return qr._create(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction kr(...t) {\n    return qr._create(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link (query:1)} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */ class Cr extends Ar {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new Cr(t, e, n);\n    }\n    _apply(t) {\n        const e = Ur(t, this.type, this._docOrFields, this._inclusive);\n        return new xn(t.firestore, t.converter, function(t, e) {\n            return new Ae(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction Lr(...t) {\n    return Cr._create(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction Mr(...t) {\n    return Cr._create(\"endAt\", t, \n    /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function Ur(t, e, n, r) {\n    if (n[0] = l(n[0]), n[0] instanceof yr) return function(t, e, n, r, s) {\n        if (!r) throw new U($, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of Pe(t)) if (n.field.isKeyField()) i.push(zt(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if (qt(t)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new U(P, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new Ht(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Zn(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new U(P, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new U(P, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!Re(t) && -1 !== c.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(tt.fromString(c));\n                    if (!rt.isDocumentKey(n)) throw new U(P, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new rt(n);\n                    u.push(zt(e, s));\n                } else {\n                    const t = ur(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new Ht(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction jr(t, e, n) {\n    if (\"string\" == typeof (n = l(n))) {\n        if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!Re(e) && -1 !== n.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(tt.fromString(n));\n        if (!rt.isDocumentKey(r)) throw new U(P, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return zt(t, new rt(r));\n    }\n    if (n instanceof Fn) return zt(t, n._key);\n    throw new U(P, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${ut(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function Br(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new U(P, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n}\n\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * This is not a comprehensive check, and this function should be removed in the\n * long term. Validations should occur in the Firestore backend.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one inequality per query.\n * 2. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n */ function zr(t, e) {\n    if (e.isInequality()) {\n        const n = Te(t), r = e.field;\n        if (null !== n && !n.isEqual(r)) throw new U(P, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${r.toString()}'`);\n        const s = Ie(t);\n        null !== s && Qr(t, r, s);\n    }\n    const n = function(t, e) {\n        for (const n of t) for (const t of n.getFlattenedFilters()) if (e.indexOf(t.op) >= 0) return t.op;\n        return null;\n    }(t.filters, function(t) {\n        switch (t) {\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return [ \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ :\n          case \"in\" /* Operator.IN */ :\n            return [ \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"not-in\" /* Operator.NOT_IN */ :\n            return [ \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ , \"!=\" /* Operator.NOT_EQUAL */ ];\n\n          default:\n            return [];\n        }\n    }(e.op));\n    if (null !== n) \n    // Special case when it's a duplicate op to give a slightly clearer error message.\n    throw n === e.op ? new U(P, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(P, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n}\n\nfunction Qr(t, e, n) {\n    if (!n.isEqual(e)) throw new U(P, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\nfunction Wr(t, e) {\n    if (!(e instanceof Tr || e instanceof Pr)) throw new U(P, `Function ${t}() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction Gr(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass Kr extends class {\n    convertValue(t, e = \"none\") {\n        switch (Lt(t)) {\n          case 0 /* TypeOrder.NullValue */ :\n            return null;\n\n          case 1 /* TypeOrder.BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* TypeOrder.NumberValue */ :\n            return Ft(t.integerValue || t.doubleValue);\n\n          case 3 /* TypeOrder.TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* TypeOrder.ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* TypeOrder.StringValue */ :\n            return t.stringValue;\n\n          case 6 /* TypeOrder.BlobValue */ :\n            return this.convertBytes(xt(t.bytesValue));\n\n          case 7 /* TypeOrder.RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* TypeOrder.GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* TypeOrder.ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* TypeOrder.ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw b();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return Pt(t.fields, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new zn(Ft(t.latitude), Ft(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = Ot(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(kt(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = Nt(t);\n        return new St(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = tt.fromString(t);\n        E(wn(n));\n        const r = new J(n.get(1), n.get(3)), s = new rt(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        g(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new Mn(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new Fn(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function Yr(t) {\n    const e = An((t = ct(t, Fn)).firestore), n = new Kr(t.firestore);\n    return _n(e, [ t._key ]).then((e => {\n        E(1 === e.length);\n        const r = e[0];\n        return new yr(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function Hr(t) {\n    !function(t) {\n        if (\"L\" /* LimitType.Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ct(t, xn))._query);\n    const e = An(t.firestore), n = new Kr(t.firestore);\n    return vn(e, t._query).then((e => {\n        const r = e.map((e => new gr(t.firestore, n, e.key, e, t.converter)));\n        return \"L\" /* LimitType.Last */ === t._query.limitType && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new _r(t, r);\n    }));\n}\n\nfunction Zr(t, e, n) {\n    const r = Gr((t = ct(t, Fn)).converter, e, n), s = Jn(Zn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return gn(An(t.firestore), [ s.toMutation(t._key, Ce.none()) ]);\n}\n\nfunction Jr(t, e, n, ...r) {\n    const s = Zn((t = ct(t, Fn)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = l(e)) || e instanceof Un ? or(s, \"updateDoc\", t._key, e, n, r) : ir(s, \"updateDoc\", t._key, e);\n    return gn(An(t.firestore), [ i.toMutation(t._key, Ce.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function Xr(t) {\n    return gn(An((t = ct(t, Fn)).firestore), [ new je(t._key, Ce.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function ts(t, e) {\n    const n = kn(t = ct(t, Sn)), r = Gr(t.converter, e), s = Jn(Zn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return gn(An(t.firestore), [ s.toMutation(n._key, Ce.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */ function es(t) {\n    return ns(t, {\n        count: is()\n    });\n}\n\n/**\n * Calculates the specified aggregations over the documents in the result\n * set of the given query, without actually downloading the documents.\n *\n * Using this function to perform aggregations is efficient because only the\n * final aggregation values, not the documents' data, is downloaded. This\n * function can even perform aggregations of the documents if the result set\n * would be prohibitively large to download entirely (e.g. thousands of documents).\n *\n * @param query The query whose result set to aggregate over.\n * @param aggregateSpec An `AggregateSpec` object that specifies the aggregates\n * to perform over the result set. The AggregateSpec specifies aliases for each\n * aggregate, which can be used to retrieve the aggregate result.\n * @example\n * ```typescript\n * const aggregateSnapshot = await getAggregate(query, {\n *   countOfDocs: count(),\n *   totalHours: sum('hours'),\n *   averageScore: average('score')\n * });\n *\n * const countOfDocs: number = aggregateSnapshot.data().countOfDocs;\n * const totalHours: number = aggregateSnapshot.data().totalHours;\n * const averageScore: number | null = aggregateSnapshot.data().averageScore;\n * ```\n * @internal TODO (sum/avg) remove when public\n */ function ns(t, e) {\n    const n = ct(t.firestore, Tn), r = An(n), s = function(t, e) {\n        const n = [];\n        for (const r in t) Object.prototype.hasOwnProperty.call(t, r) && n.push(e(t[r], r, t));\n        return n;\n    }(e, ((t, e) => new bt(new vt(e), t._aggregateType, t._internalFieldPath)));\n    // Run the aggregation and convert the results\n    return bn(r, t._query, s).then((e => function(t, e, n) {\n        const r = new Kr(t);\n        return new Nn(e, r, n);\n    }\n    /**\n * Create an AggregateField object that can be used to compute the sum of\n * a specified field over a range of documents in the result set of a query.\n * @param field Specifies the field to sum across the result set.\n * @internal TODO (sum/avg) remove when public\n */ (n, t, e)));\n}\n\nfunction rs(t) {\n    return new Dn(\"sum\", fr(\"sum\", t));\n}\n\n/**\n * Create an AggregateField object that can be used to compute the average of\n * a specified field over a range of documents in the result set of a query.\n * @param field Specifies the field to average across the result set.\n * @internal TODO (sum/avg) remove when public\n */ function ss(t) {\n    return new Dn(\"avg\", fr(\"average\", t));\n}\n\n/**\n * Create an AggregateField object that can be used to compute the count of\n * documents in the result set of a query.\n * @internal TODO (sum/avg) remove when public\n */ function is() {\n    return new Dn(\"count\");\n}\n\n/**\n * Compares two 'AggregateField` instances for equality.\n *\n * @param left Compare this AggregateField to the `right`.\n * @param right Compare this AggregateField to the `left`.\n * @internal TODO (sum/avg) remove when public\n */ function os(t, e) {\n    var n, r;\n    return t instanceof Dn && e instanceof Dn && t._aggregateType === e._aggregateType && (null === (n = t._internalFieldPath) || void 0 === n ? void 0 : n.canonicalString()) === (null === (r = e._internalFieldPath) || void 0 === r ? void 0 : r.canonicalString());\n}\n\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */ function us(t, e) {\n    return Ln(t.query, e.query) && f(t.data(), e.data());\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function cs() {\n    return new Xn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function as() {\n    return new er(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function hs(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new nr(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function ls(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new rr(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function fs(t) {\n    return new sr(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class ds {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Zn(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = ws(t, this._firestore), s = Gr(r.converter, e, n), i = Jn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, Ce.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = ws(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof Un ? or(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : ir(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, Ce.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = ws(t, this._firestore);\n        return this._mutations = this._mutations.concat(new je(e._key, Ce.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction ws(t, e) {\n    if ((t = l(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function ms(t) {\n    const e = An(t = ct(t, Tn));\n    return new ds(t, (t => gn(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class ps {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await _n(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new je(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = rt.fromPath(e);\n            this.mutations.push(new Be(n, this.precondition(n)));\n        })), await gn(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw b();\n            // Represent a deleted doc using SnapshotVersion.min().\n            e = fe.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new U(q, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(fe.min()) ? Ce.exists(!1) : Ce.updateTime(e) : Ce.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(fe.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new U(P, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return Ce.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return Ce.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const ys = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass gs {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, \n        this.deferred = s, this._t = n.maxAttempts, this.vt = new pn(this.asyncQueue, \"transaction_retry\" /* TimerId.TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this._t -= 1, this.bt();\n    }\n    bt() {\n        this.vt.J((async () => {\n            const t = new ps(this.datastore), e = this.Et(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.At(t);\n                }))));\n            })).catch((t => {\n                this.At(t);\n            }));\n        }));\n    }\n    Et(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !ft(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    At(t) {\n        this._t > 0 && this.It(t) ? (this._t -= 1, this.asyncQueue.enqueueAndForget((() => (this.bt(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    It(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return b();\n\n                  case T:\n                  case R:\n                  case V:\n                  case x:\n                  case C:\n                  case L:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case F:\n                    return !1;\n\n                  case P:\n                  case $:\n                  case D:\n                  case N:\n                  case S:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case q:\n                  case O:\n                  case k:\n                  case M:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function _s() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class vs {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new j, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new vs(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(T, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class bs {\n    constructor() {\n        // The last promise in the queue.\n        this.Tt = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Rt = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.Pt = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.Vt = [], \n        // visible for testing\n        this.$t = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.Dt = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.Nt = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Ft = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.vt = new pn(this, \"async_queue_retry\" /* TimerId.AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.xt = () => {\n            const t = _s();\n            t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.vt.tt();\n        };\n        const t = _s();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.xt);\n    }\n    get isShuttingDown() {\n        return this.Pt;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.St(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.qt(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.Pt) {\n            this.Pt = !0, this.Nt = t || !1;\n            const e = _s();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.xt);\n        }\n    }\n    enqueue(t) {\n        if (this.St(), this.Pt) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new j;\n        return this.qt((() => this.Pt && this.Nt ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Rt.push(t), this.Ot())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async Ot() {\n        if (0 !== this.Rt.length) {\n            try {\n                await this.Rt[0](), this.Rt.shift(), this.vt.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                y(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Rt.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.vt.J((() => this.Ot()));\n        }\n    }\n    qt(t) {\n        const e = this.Tt.then((() => (this.Dt = !0, t().catch((t => {\n            this.$t = t, this.Dt = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw g(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.Dt = !1, t))))));\n        return this.Tt = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.St(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Ft.indexOf(t) > -1 && (e = 0);\n        const r = vs.createAndSchedule(this, t, e, n, (t => this.kt(t)));\n        return this.Vt.push(r), r;\n    }\n    St() {\n        this.$t && b();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async Ct() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.Tt, await t;\n        } while (t !== this.Tt);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    Lt(t) {\n        for (const e of this.Vt) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Mt(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.Ct().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.Vt.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.Vt) if (e.skipDelay(), \"all\" /* TimerId.All */ !== t && e.timerId === t) break;\n            return this.Ct();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Ut(t) {\n        this.Ft.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    kt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.Vt.indexOf(t);\n        this.Vt.splice(e, 1);\n    }\n}\n\nclass Es {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Zn(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = ws(t, this._firestore), n = new Kr(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return b();\n            const r = t[0];\n            if (r.isFoundDocument()) return new yr(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new yr(this._firestore, n, e._key, null, e.converter);\n            throw b();\n        }));\n    }\n    set(t, e, n) {\n        const r = ws(t, this._firestore), s = Gr(r.converter, e, n), i = Jn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = ws(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof Un ? or(this._dataReader, \"Transaction.update\", s._key, e, n, r) : ir(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = ws(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function As(t, e, n) {\n    const r = An(t = ct(t, Tn)), s = Object.assign(Object.assign({}, ys), n);\n    !function(t) {\n        if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n    }(s);\n    const i = new j;\n    return new gs(new bs, r, s, (n => e(new Es(t, n))), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    w = t;\n}(`${s}_lite`), n(new i(\"firestore/lite\", ((t, {instanceIdentifier: e, options: n}) => {\n    const r = t.getProvider(\"app\").getImmediate(), s = new Tn(new W(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function(t, e) {\n        if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n        return new J(t.options.projectId, e);\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (r, e), r);\n    return n && s._setSettings(n), s;\n}), \"PUBLIC\").setMultipleInstances(!0)), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nr(\"firestore-lite\", \"3.9.0\", \"\"), r(\"firestore-lite\", \"3.9.0\", \"__BUILD_TARGET__\");\n\nexport { Dn as AggregateField, Nn as AggregateQuerySnapshot, Mn as Bytes, Sn as CollectionReference, Fn as DocumentReference, yr as DocumentSnapshot, Un as FieldPath, Bn as FieldValue, Tn as Firestore, U as FirestoreError, zn as GeoPoint, xn as Query, Pr as QueryCompositeFilterConstraint, Ar as QueryConstraint, gr as QueryDocumentSnapshot, Cr as QueryEndAtConstraint, Tr as QueryFieldFilterConstraint, Fr as QueryLimitConstraint, Dr as QueryOrderByConstraint, _r as QuerySnapshot, qr as QueryStartAtConstraint, St as Timestamp, Es as Transaction, ds as WriteBatch, ts as addDoc, os as aggregateFieldEqual, us as aggregateQuerySnapshotEqual, $r as and, ls as arrayRemove, hs as arrayUnion, ss as average, qn as collection, On as collectionGroup, Vn as connectFirestoreEmulator, is as count, Xr as deleteDoc, cs as deleteField, kn as doc, jn as documentId, Mr as endAt, Lr as endBefore, ns as getAggregate, es as getCount, Yr as getDoc, Hr as getDocs, Pn as getFirestore, fs as increment, Rn as initializeFirestore, xr as limit, Sr as limitToLast, Vr as or, Nr as orderBy, Ir as query, Ln as queryEqual, Cn as refEqual, As as runTransaction, as as serverTimestamp, Zr as setDoc, p as setLogLevel, vr as snapshotEqual, kr as startAfter, Or as startAt, rs as sum, $n as terminate, Jr as updateDoc, Rr as where, ms as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n"],"names":["stringToByteArray","str","out","p","i","length","c","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","this","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","DecodeBase64StringError","constructor","name","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","replace","getDefaultsFromGlobal","self","window","global","getGlobal","__FIREBASE_DEFAULTS__","getDefaultsFromCookie","document","match","cookie","e","decoded","console","error","base64Decode","JSON","parse","getDefaults","process","env","defaultsJsonString","getDefaultsFromEnvVariable","info","getDefaultEmulatorHostnameAndPort","productName","host","_a","_b","emulatorHosts","getDefaultEmulatorHost","separatorIndex","lastIndexOf","port","parseInt","substring","FirebaseError","code","message","customData","super","Object","setPrototypeOf","prototype","captureStackTrace","ErrorFactory","create","service","serviceName","errors","data","fullCode","template","PATTERN","_","key","value","replaceTemplate","fullMessage","deepEqual","a","b","aKeys","keys","bKeys","k","includes","aProp","bProp","isObject","thing","getModularInstance","_delegate","LogLevel","levelStringToEnum","debug","DEBUG","verbose","VERBOSE","INFO","warn","WARN","ERROR","silent","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","instance","logType","args","logLevel","now","Date","toISOString","method","d","t","uid","isAuthenticated","toKey","isEqual","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","w","m","_logLevel","_logHandler","_userLogHandler","val","TypeError","setLogLevel","logHandler","userLogHandler","log","y","n","map","v","g","stringify","E","A","T","R","P","V","$","N","F","x","S","q","O","C","L","U","toString","j","promise","Promise","resolve","reject","B","user","type","headers","Map","set","z","getToken","invalidateToken","start","enqueueRetryable","shutdown","Q","token","changeListener","W","auth","onInit","then","accessToken","getUid","G","r","o","h","l","getAuthHeaderValueForFirstParty","K","Y","H","appCheck","Z","s","databaseId","appId","persistenceKey","ssl","forceLongPolling","autoDetectLongPolling","useFetchStreams","J","projectId","database","static","isDefaultDatabase","X","segments","offset","len","comparator","child","slice","limit","forEach","construct","popFirst","popLast","firstSegment","lastSegment","get","isEmpty","isPrefixOf","isImmediateParentOf","toArray","Math","min","tt","canonicalString","indexOf","split","filter","et","nt","test","isValidIdentifier","isKeyField","rt","path","fromString","emptyPath","collectionGroup","hasCollectionId","getCollectionGroup","getCollectionPath","st","it","isDocumentKey","ot","ut","ct","at","ht","ft","dt","wt","BatchGetDocuments","Commit","RunQuery","RunAggregationQuery","mt","pt","yt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","gt","databaseInfo","round","random","I","async","body","status","statusText","ok","json","_t","vt","alias","D","bt","fieldPath","Et","crypto","msCrypto","Uint8Array","getRandomValues","floor","At","It","Tt","every","Rt","hasOwnProperty","call","Pt","Vt","arguments","$t","binaryString","DOMException","Symbol","iterator","next","done","toBase64","toUint8Array","approximateByteSize","compareTo","EMPTY_BYTE_STRING","Dt","RegExp","Nt","exec","substr","Number","seconds","getTime","nanos","Ft","xt","fromBase64String","fromUint8Array","St","nanoseconds","fromMillis","toDate","toMillis","_compareTo","toJSON","valueOf","padStart","qt","mapValue","fields","__type__","stringValue","Ot","__previous_value__","kt","__local_write_time__","timestampValue","Ct","Lt","Mt","booleanValue","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","isNaN","arrayValue","values","Ut","find","jt","Bt","sort","zt","Qt","Wt","Gt","Kt","Yt","assign","Ht","position","inclusive","Zt","Jt","Xt","field","op","createKeyFieldInFilter","ne","oe","ue","ce","ae","re","se","matches","matchesComparison","isInequality","getFlattenedFilters","getFilters","getFirstInequalityField","te","filters","reduce","concat","ee","fromName","ie","some","nullValue","he","dir","le","fe","timestamp","toMicroseconds","toTimestamp","de","root","me","EMPTY","insert","copy","BLACK","remove","left","right","size","minKey","maxKey","inorderTraversal","reverseTraversal","getIterator","we","getIteratorFrom","getReverseIterator","getReverseIteratorFrom","isReverse","nodeStack","getNext","pop","hasNext","peek","color","RED","fixUp","removeMin","isRed","moveRedLeft","rotateRight","moveRedRight","rotateLeft","colorFlip","checkMaxDepth","check","pow","pe","has","first","last","forEachInRange","forEachWhile","firstAfterOrEqual","ye","add","delete","unionWith","iter","ge","covers","_e","getFieldsMap","setAll","applyChanges","clone","ve","documentType","version","readTime","createTime","documentState","empty","convertToFoundDocument","convertToNoDocument","convertToUnknownDocument","setHasCommittedMutations","setHasLocalMutations","setReadTime","hasLocalMutations","hasCommittedMutations","hasPendingWrites","isValidDocument","isFoundDocument","isNoDocument","isUnknownDocument","mutableCopy","be","orderBy","startAt","endAt","Ee","Ae","explicitOrderBy","limitType","Ie","Te","Re","Pe","keyField","Ve","$e","Ne","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","Fe","xe","Se","elements","qe","Oe","M","ke","transform","Ce","updateTime","exists","isNone","Le","Me","precondition","fieldTransforms","getFieldMask","Ue","fieldMask","je","Be","ze","asc","desc","Qe","in","We","and","or","Ge","Ke","Ye","He","Ze","fromTimestamp","Je","Xe","tn","wn","en","nn","rn","un","structuredQuery","parent","from","collectionId","allDescendants","fn","where","ln","direction","cn","before","an","hn","unaryFilter","fieldFilter","compositeFilter","dn","fieldPaths","mn","pn","timerId","reset","cancel","max","enqueueAfterDelay","skipDelay","yn","authCredentials","appCheckCredentials","connection","all","catch","terminate","gn","writes","update","updateMask","verify","updateTransforms","setToServerValue","appendMissingElements","removeAllFromArray","increment","currentDocument","on","_n","documents","found","newFoundDocument","missing","newNoDocument","sn","En","An","_terminated","fetch","bind","_databaseId","app","options","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","_authCredentials","_appCheckCredentials","In","credentials","ignoreUndefinedProperties","cacheSizeBytes","Tn","_app","_settings","_settingsFrozen","_initialized","_terminateTask","_setSettings","client","sessionIndex","iamToken","authTokenFactory","_getSettings","_delete","_terminate","settings","Rn","_getProvider","isInitialized","initialize","instanceIdentifier","Pn","getImmediate","identifier","Vn","mockUserToken","project","iat","sub","user_id","payload","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","alg","$n","Dn","_aggregateType","_internalFieldPath","Nn","_userDataWriter","_data","query","convertValue","Fn","converter","_key","firestore","_path","id","Sn","withConverter","xn","_query","qn","On","kn","Cn","Ln","De","Mn","_byteString","Un","_internalPath","jn","Bn","_methodName","zn","isFinite","_lat","_long","Qn","Wn","toMutation","Gn","Kn","Yn","lt","mr","methodName","contains","Hn","Zn","Jn","merge","mergeFields","lr","ar","fr","pr","Xn","_toFieldTransform","tr","er","nr","cr","rr","sr","ir","wr","f","ur","hr","fromDate","getPrototypeOf","dr","search","yr","_firestore","_document","_converter","ref","gr","fromFirestore","br","_r","_docs","docs","vr","Er","Ar","Ir","Pr","Tr","_apply","_field","_op","_value","_parse","zr","Br","jr","Rr","_create","_queryConstraints","_getOperator","_getQueryConstraints","Vr","Wr","$r","Dr","_direction","Qr","Nr","Fr","_limit","_limitType","xr","Sr","qr","_docOrFields","_inclusive","Ur","Or","kr","Cr","Lr","Mr","Gr","toFirestore","Kr","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","convertDocumentKey","Yr","Hr","vn","reverse","Zr","none","Jr","Xr","ts","es","ns","count","is","avg","sum","structuredAggregationQuery","aggregations","result","aggregateFields","bn","rs","ss","os","us","cs","as","hs","ls","fs","ds","_commitHandler","_mutations","_committed","_dataReader","_verifyNotCommitted","ws","commit","ms","ps","datastore","readVersions","mutations","committed","lastWriteError","writtenDocs","Set","ensureCommitNotCalled","recordVersion","write","preconditionForUpdate","fromPath","ys","maxAttempts","gs","asyncQueue","updateFunction","deferred","run","enqueueAndForget","_s","vs","targetTimeMs","removalCallback","timerHandle","setTimeout","handleDelayElapsed","clearTimeout","bs","visibilityState","addEventListener","isShuttingDown","enqueue","enqueueAndForgetEvenWhileRestricted","enterRestrictedMode","removeEventListener","shift","stack","createAndSchedule","verifyOperationInProgress","splice","Es","_transaction","lookup","As","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","mode","setMultipleInstances","setServiceProps","props","setInstanceCreatedCallback","callback","getProvider","apply"],"mappings":"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","preExistingComment":"firebase-firestore-lite.js.map"}